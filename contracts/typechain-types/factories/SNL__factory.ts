/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SNL, SNLInterface } from "../SNL";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "GameWon",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "PlayerJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "PlayerMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "joinGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "uint256",
        name: "playerPosition",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isStarted",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollDice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200196a3803806200196a8339810160408190526200003491620003b8565b81816000620000448382620004b1565b506001620000538282620004b1565b505060017f586689db7536874b78a6eac0f58556a56a106985743f7c16a699b27bb02f88bd55505060097fa7061849acf4dd50ca004db0f3783d22ac4c1e6e6ac4087d7aeaa0345df7c87b819055600f7f83ba890607818823e46eb1e5ed8f7282277ac60de8c863727688b48d92a8da6d5560177f3d4691043262bb71b358bddc6f01f8c4de71fc1f1a1b51e3a78463b85cab661e55601a7f898785b36944e5ac6e3613998a5a0ffd4c1f320c59be1919954c18089a19ba5155601e7fd63fbe8d364aab57a8c3f248b48b9a682e3e21a63dbb1e9e38c0d926ff75939381905560277f9a7931452b12041374800efe131086ab69572578c6f0f07f926e859c168270d25560337f182301c7f542f647bdcea90516e08646d5f0d8fd9eaa9106afa57447d34e4dc05560377f8518cb14e45c395bda28aa62494aabf636d200f9e24b1d91170bd743d557784155602091909152600c7fc575c31fea594a6eb97c8e9d3f9caee4c16218c6ef37e923234c0fe9014a61e75560107fc7694af312c4f286114180fd0ba6a52461fcee8a381636770b19a343af92538a5560167fdec90e20065e511a0428d28bf1b6b0d715e4b1cb865c1f0580815586cc6ebf9e557f20eb389d0739387175ea0af71ea83e439c1e64b1f1d88bc1a63c293936f1ddf9555060347f1158e7856e424bc35a28252f518c89c1af91164333f54fc19b5724835112c68155602c7f327f5a96ce8922d13e926b5301182a995f2dad0da1f81621072d6188be90cf4055602f7f72fe66faf096e1b8c9ecc3b66c7af137c79b7e17c40297754fb1c70cc4869abc5560457fdd9bf46b68f2858fcbfdd22eaa6d4bc710b50475a2b04df5507e88b47e1571f6556036600052603f7f583ee370e5f1f222fb7a7c3471bf9c6f1ccfa879a8ed5036923628694913cb59556200057d565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200031b57600080fd5b81516001600160401b0380821115620003385762000338620002f3565b604051601f8301601f19908116603f01168101908282118183101715620003635762000363620002f3565b816040528381526020925086838588010111156200038057600080fd5b600091505b83821015620003a4578582018301518183018401529082019062000385565b600093810190920192909252949350505050565b60008060408385031215620003cc57600080fd5b82516001600160401b0380821115620003e457600080fd5b620003f28683870162000309565b935060208501519150808211156200040957600080fd5b50620004188582860162000309565b9150509250929050565b600181811c908216806200043757607f821691505b6020821081036200045857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004ac57600081815260208120601f850160051c81016020861015620004875750805b601f850160051c820191505b81811015620004a85782815560010162000493565b5050505b505050565b81516001600160401b03811115620004cd57620004cd620002f3565b620004e581620004de845462000422565b846200045e565b602080601f8311600181146200051d5760008415620005045750858301515b600019600386901b1c1916600185901b178555620004a8565b600085815260208120601f198616915b828110156200054e578886015182559484019460019091019084016200052d565b50858210156200056d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113dd806200058d6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063b88d4fde11610071578063b88d4fde14610217578063c87b56dd1461022a578063d4f77b1c1461023d578063e2eb41ff14610245578063e985e9c51461029557600080fd5b806370a08231146101d3578063837e7cc6146101f457806395d89b41146101fc578063a22cb4651461020457600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780635e123ce4146101b35780636352211e146101c057600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004610fe9565b6102a8565b60405190151581526020015b60405180910390f35b6101406102fa565b60405161012f9190611056565b61016061015b366004611069565b61038c565b6040516001600160a01b03909116815260200161012f565b61018b61018636600461109e565b6103b5565b005b61018b61019b3660046110c8565b6103c4565b61018b6101ae3660046110c8565b610454565b6007546101239060ff1681565b6101606101ce366004611069565b610474565b6101e66101e1366004611104565b61047f565b60405190815260200161012f565b61018b6104c7565b6101406105eb565b61018b61021236600461111f565b6105fa565b61018b610225366004611171565b610605565b610140610238366004611069565b61061c565b61018b610691565b610278610253366004611104565b600a602052600090815260409020805460019091015460ff8082169161010090041683565b60408051938452911515602084015215159082015260600161012f565b6101236102a336600461124d565b6107a3565b60006001600160e01b031982166380ac58cd60e01b14806102d957506001600160e01b03198216635b5e139f60e01b145b806102f457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461030990611280565b80601f016020809104026020016040519081016040528092919081815260200182805461033590611280565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b5050505050905090565b6000610397826107d1565b506000828152600460205260409020546001600160a01b03166102f4565b6103c082823361080a565b5050565b6001600160a01b0382166103f357604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610400838333610817565b9050836001600160a01b0316816001600160a01b03161461044e576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103ea565b50505050565b61046f83838360405180602001604052806000815250610605565b505050565b60006102f4826107d1565b60006001600160a01b0382166104ab576040516322718ad960e21b8152600060048201526024016103ea565b506001600160a01b031660009081526003602052604090205490565b336000908152600a602052604090206001015460ff166105205760405162461bcd60e51b815260206004820152601460248201527311d85b59481a185cc81b9bdd081cdd185c9d195960621b60448201526064016103ea565b336000908152600a6020526040902060010154610100900460ff1661057d5760405162461bcd60e51b8152602060048201526013602482015272155cd95c881b9bdd08185d5d1a1bdc9a5e9959606a1b60448201526064016103ea565b6000600642336040516020016105af92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c6105d291906112ba565b6105dd9060016112f2565b90506105e881610910565b50565b60606001805461030990611280565b6103c0338383610a3a565b6106108484846103c4565b61044e84848484610ad9565b6060610627826107d1565b50600061063f60408051602081019091526000815290565b9050600081511161065f576040518060200160405280600081525061068a565b8061066984610c02565b60405160200161067a929190611305565b6040516020818303038152906040525b9392505050565b336000908152600a602052604090206001015460ff16156106f45760405162461bcd60e51b815260206004820152601a60248201527f706c617965722068617320616c7265616479206a6f696e65642100000000000060448201526064016103ea565b600680546000918261070583611334565b9190505590506107153382610c95565b6040805160608101825260008082526001602080840182815284860183815233808652600a845294879020955186559051949092018054925115156101000261ff00199515159590951661ffff199093169290921793909317905591514281527f3330a6773675f31f62070870f40379f8c6d42e3761410011a4dfc42b18043d2f910160405180910390a250565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260408120546001600160a01b0316806102f457604051637e27328960e01b8152600481018490526024016103ea565b61046f8383836001610caf565b6000828152600260205260408120546001600160a01b039081169083161561084457610844818486610db5565b6001600160a01b0381161561088257610861600085600080610caf565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156108b1576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b336000908152600a602052604081205461092b9083906112f2565b9050604881111561094357505033600052600a602052565b6000818152600860205260409020541561096b5760009081526008602052604090205461098f565b6000818152600960205260409020541561098f576000908152600960205260409020545b336000818152600a6020908152604091829020849055815192835282018390527fe0a1b340a14d47a5482875f738abb6e2c70f533d80188606facc527b70cbd212910160405180910390a1604881036103c057336000818152600a6020908152604091829020600101805461ff0019169055815192835242908301527fdae072d96ce4f8bfc6557d4e8c29e0d1875b50c4efe52b340ab49669ec42ebe6910160405180910390a15050565b6001600160a01b038216610a6c57604051630b61174360e31b81526001600160a01b03831660048201526024016103ea565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561044e57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610b1b90339088908790879060040161134d565b6020604051808303816000875af1925050508015610b56575060408051601f3d908101601f19168201909252610b539181019061138a565b60015b610bbf573d808015610b84576040519150601f19603f3d011682016040523d82523d6000602084013e610b89565b606091505b508051600003610bb757604051633250574960e11b81526001600160a01b03851660048201526024016103ea565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610bfb57604051633250574960e11b81526001600160a01b03851660048201526024016103ea565b5050505050565b60606000610c0f83610e19565b600101905060008167ffffffffffffffff811115610c2f57610c2f61115b565b6040519080825280601f01601f191660200182016040528015610c59576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c6357509392505050565b6103c0828260405180602001604052806000815250610ef1565b8080610cc357506001600160a01b03821615155b15610d85576000610cd3846107d1565b90506001600160a01b03831615801590610cff5750826001600160a01b0316816001600160a01b031614155b8015610d125750610d1081846107a3565b155b15610d3b5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103ea565b8115610d835783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610dc0838383610f08565b61046f576001600160a01b038316610dee57604051637e27328960e01b8152600481018290526024016103ea565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103ea565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e585772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e84576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610ea257662386f26fc10000830492506010015b6305f5e1008310610eba576305f5e100830492506008015b6127108310610ece57612710830492506004015b60648310610ee0576064830492506002015b600a83106102f45760010192915050565b610efb8383610f6e565b61046f6000848484610ad9565b60006001600160a01b03831615801590610f665750826001600160a01b0316846001600160a01b03161480610f425750610f4284846107a3565b80610f6657506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610f9857604051633250574960e11b8152600060048201526024016103ea565b6000610fa683836000610817565b90506001600160a01b0381161561046f576040516339e3563760e11b8152600060048201526024016103ea565b6001600160e01b0319811681146105e857600080fd5b600060208284031215610ffb57600080fd5b813561068a81610fd3565b60005b83811015611021578181015183820152602001611009565b50506000910152565b60008151808452611042816020860160208601611006565b601f01601f19169290920160200192915050565b60208152600061068a602083018461102a565b60006020828403121561107b57600080fd5b5035919050565b80356001600160a01b038116811461109957600080fd5b919050565b600080604083850312156110b157600080fd5b6110ba83611082565b946020939093013593505050565b6000806000606084860312156110dd57600080fd5b6110e684611082565b92506110f460208501611082565b9150604084013590509250925092565b60006020828403121561111657600080fd5b61068a82611082565b6000806040838503121561113257600080fd5b61113b83611082565b91506020830135801515811461115057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561118757600080fd5b61119085611082565b935061119e60208601611082565b925060408501359150606085013567ffffffffffffffff808211156111c257600080fd5b818701915087601f8301126111d657600080fd5b8135818111156111e8576111e861115b565b604051601f8201601f19908116603f011681019083821181831017156112105761121061115b565b816040528281528a602084870101111561122957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561126057600080fd5b61126983611082565b915061127760208401611082565b90509250929050565b600181811c9082168061129457607f821691505b6020821081036112b457634e487b7160e01b600052602260045260246000fd5b50919050565b6000826112d757634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b808201808211156102f4576102f46112dc565b60008351611317818460208801611006565b83519083019061132b818360208801611006565b01949350505050565b600060018201611346576113466112dc565b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113809083018461102a565b9695505050505050565b60006020828403121561139c57600080fd5b815161068a81610fd356fea2646970667358221220fb54f84cd3f42d3bda895724b27459934199efe3c07d54744a4411a235b2725464736f6c63430008140033";

type SNLConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SNLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SNL__factory extends ContractFactory {
  constructor(...args: SNLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SNL";
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SNL> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<SNL>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): SNL {
    return super.attach(address) as SNL;
  }
  connect(signer: Signer): SNL__factory {
    return super.connect(signer) as SNL__factory;
  }
  static readonly contractName: "SNL";
  public readonly contractName: "SNL";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SNLInterface {
    return new utils.Interface(_abi) as SNLInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SNL {
    return new Contract(address, _abi, signerOrProvider) as SNL;
  }
}
